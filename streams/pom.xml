<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.0</version>
        <relativePath/>
    </parent>

    <groupId>ru.on8off</groupId>
    <artifactId>spring-boot-kafka-streams-strems</artifactId>
    <version>1.0.${revision}</version>
    <packaging>jar</packaging>

    <properties>
        <revision>local</revision>
        <java.version>16</java.version>
        <confluentinc.version>6.2.1</confluentinc.version>
    </properties>

    <repositories>
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>ru.on8off.kafka-streams-lesson</groupId>
            <artifactId>model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-streams</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-json-serializer</artifactId>
            <version>${confluentinc.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>it</id>
            <activation>
                <property>
                    <name>docker_host</name>
                </property>
            </activation>
            <properties>
                <docker_port>2375</docker_port>
                <zookeeper_port>2181</zookeeper_port>
                <kafka_port>9092</kafka_port>
                <kafka_port_internal>19092</kafka_port_internal>
                <schema_registry_port>8081</schema_registry_port>
                <kafkadrop_port>8082</kafkadrop_port>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <environmentVariables>
                                <spring.profiles.active>tests-remote</spring.profiles.active>
                                <kafka_host>${docker_host}</kafka_host>
                                <kafka_port>${kafka_port}</kafka_port>
                                <schema_registry_host>${docker_host}</schema_registry_host>
                                <schema_registry_port>${schema_registry_port}</schema_registry_port>
                            </environmentVariables>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.38.0</version>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <dockerHost>tcp://${docker_host}:${docker_port}</dockerHost>
                            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                            <images>
                                <image>
                                    <name>confluentinc/cp-zookeeper:${confluentinc.version}</name>
                                    <alias>zookeeper</alias>
                                    <run>
                                        <hostname>zookeeper</hostname>
                                        <env>
                                            <ZOOKEEPER_CLIENT_PORT>${zookeeper_port}</ZOOKEEPER_CLIENT_PORT>
                                            <ZOOKEEPER_SERVER_ID>1</ZOOKEEPER_SERVER_ID>
                                            <ZOOKEEPER_SERVERS>zookeeper:2888:3888</ZOOKEEPER_SERVERS>
                                        </env>
                                        <ports>
                                            <port>${zookeeper_port}:${zookeeper_port}</port>
                                        </ports>
                                        <network>
                                            <name>${groupId}-${artifactId}-network</name>
                                        </network>
                                        <wait>
                                            <log>Started AdminServer on address</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>confluentinc/cp-kafka:6.2.1</name>
                                    <alias>kafka</alias>
                                    <run>
                                        <hostname>kafka</hostname>
                                        <env>
                                            <KAFKA_ADVERTISED_LISTENERS>INTERNAL://kafka:${kafka_port_internal},EXTERNAL://${docker_host}:${kafka_port}</KAFKA_ADVERTISED_LISTENERS>
                                            <KAFKA_LISTENER_SECURITY_PROTOCOL_MAP>INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT</KAFKA_LISTENER_SECURITY_PROTOCOL_MAP>
                                            <KAFKA_INTER_BROKER_LISTENER_NAME>INTERNAL</KAFKA_INTER_BROKER_LISTENER_NAME>
                                            <KAFKA_ZOOKEEPER_CONNECT>zookeeper:${zookeeper_port}</KAFKA_ZOOKEEPER_CONNECT>
                                            <KAFKA_BROKER_ID>1</KAFKA_BROKER_ID>
                                            <KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>1</KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>
                                            <KAFKA_LOG4J_LOGGERS>kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO</KAFKA_LOG4J_LOGGERS>
                                        </env>
                                        <ports>
                                            <port>${kafka_port}:${kafka_port}</port>
                                        </ports>
                                        <network>
                                            <name>${groupId}-${artifactId}-network</name>
                                        </network>
                                        <dependsOn>
                                            <container>zookeeper</container>
                                        </dependsOn>
                                        <wait>
                                            <log>Kafka startTimeMs</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>confluentinc/cp-schema-registry:6.2.1</name>
                                    <alias>schema-registry</alias>
                                    <run>
                                        <hostname>schema-registry</hostname>
                                        <env>
                                            <SCHEMA_REGISTRY_HOST_NAME>kafka-schema-registry</SCHEMA_REGISTRY_HOST_NAME>
                                            <SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS>PLAINTEXT://kafka:${kafka_port_internal}</SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS>
                                            <SCHEMA_REGISTRY_LISTENERS>http://0.0.0.0:${schema_registry_port}</SCHEMA_REGISTRY_LISTENERS>
                                        </env>
                                        <ports>
                                            <port>${schema_registry_port}:${schema_registry_port}</port>
                                        </ports>
                                        <network>
                                            <name>${groupId}-${artifactId}-network</name>
                                        </network>
                                        <dependsOn>
                                            <container>zookeeper</container>
                                            <container>kafka</container>
                                        </dependsOn>
                                        <wait>
                                            <log>Server started, listening for requests</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>obsidiandynamics/kafdrop:latest</name>
                                    <alias>kafdrop</alias>
                                    <run>
                                        <hostname>kafdrop</hostname>
                                        <env>
                                            <KAFKA_BROKERCONNECT>PLAINTEXT://kafka:${kafka_port_internal}</KAFKA_BROKERCONNECT>
                                            <SCHEMAREGISTRY_CONNECT>http://schema-registry:${schema_registry_port}</SCHEMAREGISTRY_CONNECT>
                                        </env>
                                        <ports>
                                            <port>${kafkadrop_port}:9000</port>
                                        </ports>
                                        <network>
                                            <name>${groupId}-${artifactId}-network</name>
                                        </network>
                                        <dependsOn>
                                            <container>zookeeper</container>
                                            <container>kafka</container>
                                            <container>schema-registry</container>
                                        </dependsOn>
                                        <wait>
                                            <log>Started application in</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>